import importlib
import os
import sys
import types
from pathlib import Path

import pytest


@pytest.fixture()
def agent(tmp_path, monkeypatch):
    monkeypatch.setenv('OLLAMA_SKIP_CHECK', '1')
    state_dir = tmp_path / 'state'
    exploits_dir = tmp_path / 'exploits'
    monkeypatch.setenv('NMAP_AGENT_STATE_DIR', str(state_dir))
    monkeypatch.setenv('NMAP_AGENT_EXPLOITS_DIR', str(exploits_dir))
    project_root = Path(__file__).resolve().parents[1]
    if str(project_root) not in sys.path:
        sys.path.insert(0, str(project_root))
    if 'requests' not in sys.modules:
        requests_stub = types.SimpleNamespace(get=lambda *a, **k: types.SimpleNamespace(status_code=503))
        sys.modules['requests'] = requests_stub
    if 'nmap_agent' in sys.modules:
        del sys.modules['nmap_agent']
    module = importlib.import_module('nmap_agent')
    module.PORT_HISTORY.clear()
    module.VENDOR_CACHE.clear()
    module.EXPLOIT_HISTORY.clear()
    exploits_dir.mkdir(parents=True, exist_ok=True)
    helper = exploits_dir / 'smb_enumeration.sh'
    helper.write_text("#!/bin/bash\necho 'fixture smb enumeration'\n")
    os.chmod(helper, 0o755)
    return module


def test_plan_and_execute_exploit(agent):
    agent.PORT_HISTORY['10.10.10.5'] = {
        'last_seen': '2024-01-01T00:00:00Z',
        'tcp_ports': [445],
        'udp_ports': [],
        'risk_score': 6,
        'services': {445: 'microsoft-ds'}
    }

    plans = agent.plan_exploit_actions('10.10.10.5')
    smb_plan = next(plan for plan in plans if plan['id'] == 'enum_smb_shares')
    assert smb_plan['available']

    output = agent.request_and_execute_exploit(smb_plan, auto_approve=True)
    assert 'fixture smb enumeration' in output
    assert agent.EXPLOIT_HISTORY[-1]['status'] == 'completed'


def test_exploit_permission_required(agent, monkeypatch):
    agent.PORT_HISTORY['10.10.10.5'] = {
        'last_seen': '2024-01-01T00:00:00Z',
        'tcp_ports': [445],
        'udp_ports': [],
        'risk_score': 6,
        'services': {445: 'microsoft-ds'}
    }
    plans = agent.plan_exploit_actions('10.10.10.5')
    smb_plan = next(plan for plan in plans if plan['id'] == 'enum_smb_shares')

    monkeypatch.setattr(agent.sys, 'stdin', types.SimpleNamespace(isatty=lambda: False), raising=False)

    result = agent.request_and_execute_exploit(smb_plan, auto_approve=False)
    assert result is None
    assert agent.EXPLOIT_HISTORY[-1]['status'] in {'no_tty', 'denied'}
